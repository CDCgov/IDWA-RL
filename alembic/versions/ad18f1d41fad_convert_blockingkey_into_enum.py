"""convert BlockingKey into enum

Revision ID: ad18f1d41fad
Revises: 6052c193a26a
Create Date: 2024-09-17 21:15:37.714595

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ad18f1d41fad'
down_revision: Union[str, None] = '6052c193a26a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mpi_blocking_key')
    op.drop_table('mpi_blocking_value')

    op.create_table('mpi_blocking_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('blockingkey', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['mpi_patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_blocking_value_patient_key_value', 'mpi_blocking_value', ['patient_id', 'blockingkey', 'value'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mpi_blocking_value')

    op.create_table('mpi_blocking_key',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mpi_blocking_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('blockingkey_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['blockingkey_id'], ['mpi_blocking_key.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['mpi_patient.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mpi_blocking_value_value'), 'mpi_blocking_value', ['value'], unique=False)
    # ### end Alembic commands ###
